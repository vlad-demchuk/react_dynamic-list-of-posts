{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/comments.ts","api/post.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["PostsList","posts","onSelectPostId","selectedPostId","className","map","post","userId","title","id","type","onClick","style","backgroundColor","BASE_URL","getPostComments","postId","a","fetch","response","json","deleteComment","commentId","method","addComment","comment","headers","body","JSON","stringify","getPosts","getUserPosts","getPostDetails","NewCommentForm","onRequest","useState","name","setName","email","setEmail","setBody","handleSubmit","event","preventDefault","newComment","onSubmit","placeholder","value","onChange","target","required","PostDetails","setPost","comments","setComments","showComments","setShowComments","requestPost","postFromServer","console","log","requestComments","commentsFromServer","useEffect","length","cn","hidden","getUsers","App","setPosts","setSelectedPostId","users","setUsers","requestUsers","usersFromServer","slice","requestPosts","postsFromServer","handleSelect","userPost","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6724d43c.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../../react-app-env';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  onSelectPostId: (postId: number) => void,\n  selectedPostId: number,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  onSelectPostId,\n  selectedPostId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>\n              {`[User #${post.userId}]:`}\n            </b>\n            {post.title}\n          </div>\n          {post.id !== selectedPostId\n            ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  onSelectPostId(post.id);\n                }}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  onSelectPostId(0);\n                }}\n                style={{ backgroundColor: 'red' }}\n              >\n                Close\n              </button>\n            )}\n\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { NewComment } from '../react-app-env';\nimport { BASE_URL } from './api';\n\nexport const getPostComments = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n};\n\nexport const deleteComment = async (commentId: number) => {\n  await fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const addComment = async (comment: NewComment) => {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify(comment),\n  });\n\n  // return response.json();\n};\n","import { BASE_URL } from './api';\n\nexport const getPosts = async () => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n};\n\nexport const getUserPosts = async (userId: number) => {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  return response.json();\n};\n\nexport const getPostDetails = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\nimport { Post } from '../../react-app-env';\n\ntype Props = {\n  post: Post,\n  onRequest: () => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  post,\n  onRequest,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newComment = {\n      postId: post.id,\n      name,\n      email,\n      body,\n    };\n\n    await addComment(newComment);\n    onRequest();\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => {\n            setBody(event.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { deleteComment, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/post';\nimport { Post, Comment } from '../../react-app-env';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [showComments, setShowComments] = useState(true);\n\n  const requestPost = async () => {\n    try {\n      const postFromServer = await getPostDetails(selectedPostId);\n\n      setPost(postFromServer);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log('Error');\n    }\n  };\n\n  const requestComments = async () => {\n    try {\n      const commentsFromServer = await getPostComments(selectedPostId);\n\n      setComments(commentsFromServer);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log('Error');\n    }\n  };\n\n  useEffect(() => {\n    requestPost();\n    requestComments();\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length === 0 && 'No comments'}\n        <div className={cn({ hidden: comments.length === 0 })}>\n          {!showComments\n            ? (\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setShowComments(true);\n                }}\n              >\n                {`Show ${comments.length} comments`}\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => {\n                  setShowComments(false);\n                }}\n              >\n                {`Hide ${comments.length} comments`}\n              </button>\n            )}\n        </div>\n\n        {showComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={async () => {\n                    await deleteComment(comment.id);\n                    await requestComments();\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          {post && (\n            <NewCommentForm\n              post={post}\n              onRequest={requestComments}\n            />\n\n          )}\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getUsers = async () => {\n  const response = await fetch(`${BASE_URL}/users`);\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts, getUserPosts } from './api/post';\nimport { User } from './react-app-env';\nimport { getUsers } from './api/users';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [users, setUsers] = useState<User[]>([]);\n\n  const requestUsers = async () => {\n    try {\n      const usersFromServer = await getUsers();\n\n      setUsers(usersFromServer.slice(0, 10));\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log('Eror');\n    }\n  };\n\n  const requestPosts = async () => {\n    try {\n      const postsFromServer = await getPosts();\n\n      setPosts(postsFromServer);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log('Error');\n    }\n  };\n\n  useEffect(() => {\n    requestUsers();\n    requestPosts();\n  }, []);\n\n  const handleSelectedPostId = (postId: number) => {\n    setSelectedPostId(postId);\n  };\n\n  const handleSelect = async (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const userPost = await getUserPosts(+event.target.value);\n\n    setPosts(userPost);\n\n    if (+event.target.value === 0) {\n      requestPosts();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleSelect}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            onSelectPostId={handleSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0 && (\n            <PostDetails selectedPostId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}