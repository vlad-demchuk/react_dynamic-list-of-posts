{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/comments.ts","api/post.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","onSelectPostId","selectedPostId","className","map","post","userId","title","id","type","onClick","style","backgroundColor","BASE_URL","getPostComments","postId","a","response","fetch","json","deleteComment","commentId","method","addComment","comment","headers","body","JSON","stringify","getPosts","getUserPosts","getPostDetails","NewCommentForm","comments","onRequest","useState","name","setName","email","setEmail","setBody","handleSubmit","event","preventDefault","newComment","length","onSubmit","placeholder","value","onChange","target","PostDetails","setPost","setComments","showComments","setShowComments","requestPost","postFromServer","console","log","requestComments","commentsFromServer","useEffect","cn","hidden","App","setPosts","setSelectedPostId","requestPosts","postsFromServer","handleSelect","userPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12313900.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../../react-app-env';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  onSelectPostId: (postId: number) => void,\n  selectedPostId: number,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  onSelectPostId,\n  selectedPostId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>\n              {`[User #${post.userId}]:`}\n            </b>\n            {post.title}\n          </div>\n          {post.id !== selectedPostId\n            ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  onSelectPostId(post.id);\n                }}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  onSelectPostId(0);\n                }}\n                style={{ backgroundColor: 'red' }}\n              >\n                Close\n              </button>\n            )}\n\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { NewComment } from '../react-app-env';\nimport { BASE_URL } from './api';\n\nexport const getPostComments = async (postId: number) => {\n  const response = fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return (await response).json();\n};\n\nexport const deleteComment = async (commentId: number) => {\n  await fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const addComment = async (comment: NewComment) => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    body: JSON.stringify(comment),\n  });\n\n  return response.json();\n};\n","import { BASE_URL } from './api';\n\nexport const getPosts = async () => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n};\n\nexport const getUserPosts = async (userId: number) => {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  return response.json();\n};\n\nexport const getPostDetails = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\nimport { Post, Comment } from '../../react-app-env';\n\ntype Props = {\n  post: Post,\n  comments: Comment[],\n  onRequest: () => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  post,\n  comments,\n  onRequest,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newComment = {\n      id: comments.length + 1,\n      postId: post.id,\n      name,\n      email,\n      body,\n    };\n\n    await addComment(newComment);\n    onRequest();\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => {\n            setBody(event.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { deleteComment, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/post';\nimport { Post, Comment } from '../../react-app-env';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [showComments, setShowComments] = useState(true);\n\n  const requestPost = async () => {\n    try {\n      const postFromServer = await getPostDetails(selectedPostId);\n\n      setPost(postFromServer);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log('Error');\n    }\n  };\n\n  const requestComments = async () => {\n    try {\n      const commentsFromServer = await getPostComments(selectedPostId);\n\n      setComments(commentsFromServer);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log('Error');\n    }\n  };\n\n  useEffect(() => {\n    requestPost();\n    requestComments();\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length === 0 && 'No comments'}\n        <div className={cn({ hidden: comments.length === 0 })}>\n          {!showComments\n            ? (\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setShowComments(true);\n                }}\n              >\n                {`Show ${comments.length} comments`}\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => {\n                  setShowComments(false);\n                }}\n              >\n                {`Hide ${comments.length} comments`}\n              </button>\n            )}\n        </div>\n\n        {showComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li key={comment.id}>\n                <li className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={async () => {\n                      await deleteComment(comment.id);\n                      await requestComments();\n                    }}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          {post && (\n            <NewCommentForm\n              post={post}\n              comments={comments}\n              onRequest={requestComments}\n            />\n\n          )}\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts, getUserPosts } from './api/post';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const handleSelectedPostId = (postId: number) => {\n    setSelectedPostId(postId);\n  };\n\n  const requestPosts = async () => {\n    try {\n      const postsFromServer = await getPosts();\n\n      setPosts(postsFromServer);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log('Error');\n    }\n  };\n\n  useEffect(() => {\n    requestPosts();\n  }, []);\n\n  const handleSelect = async (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const userPost = await getUserPosts(+event.target.value);\n\n    setPosts(userPost);\n\n    if (+event.target.value === 0) {\n      requestPosts();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleSelect}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            onSelectPostId={handleSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0 && (\n            <PostDetails selectedPostId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}